{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["getColourDichromatic","correlation","colorScale","Math","abs","hexstr","scalefactor","r","parseInt","slice","g","b","toString","rgbToHex","am4core","am4themes_animated","App","props","onFileChange","event","file","target","files","reader","FileReader","readAsText","that","onload","data","text","arr","split","header","i","length","row","row_data","j","push","loadCSV","result","filter","x","parseFloat","coef","state","threshold","linkColour","value","label","round","setState","chart","am4charts","exporting","menu","filePrefix","colors","saturation","this","dataFields","fromName","toName","nodePadding","minNodeSize","sortBy","fontSize","fontFamily","nodeTemplate","nodes","template","propertyFields","fill","events","on","node","outgoingDataItems","each","dataItem","toNode","link","isHover","incomingDataItems","fromNode","relativeRotation","fillOpacity","marginTop","states","create","properties","cursorOverStyle","pointer","linkTemplate","links","strokeOpacity","tooltipText","colorMode","clickable","hoverState","dispose","type","onChange","id","style","width","height","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c1f8996.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      threshold: 0.6,\n      data:[{\"variable1\": \"varA\",\"var1_domain\": \"domain3\",\"variable2\": \"varV\",\"var2_domain\": \"domain3\",\"coef\": \"-0.40238348440349847\",\"value\": \"0.40238348440349847\",\"linkColour\": \"#c1cc3d\", \"rounded\": \"-0.402\"},\n    {\"variable1\": \"varG\",\"var1_domain\": \"domain6\",\"variable2\": \"varI\",\"var2_domain\": \"domain3\",\"coef\": \"0.7869249499775308\",\"value\": \"0.7869249499775308\",\"linkColour\": \"#3dadcc\", \"rounded\": \"0.787\"},\n    {\"variable1\": \"varU\",\"var1_domain\": \"domain5\",\"variable2\": \"varZ\",\"var2_domain\": \"domain5\",\"coef\": \"0.5654997321819308\",\"value\": \"0.5654997321819308\",\"linkColour\": \"#3dccb1\", \"rounded\": \"0.565\"},\n    {\"variable1\": \"varL\",\"var1_domain\": \"domain5\",\"variable2\": \"varN\",\"var2_domain\": \"domain1\",\"coef\": \"-0.44449653725230015\",\"value\": \"0.44449653725230015\",\"linkColour\": \"#cccb3d\", \"rounded\": \"-0.444\"},\n    {\"variable1\": \"varL\",\"var1_domain\": \"domain6\",\"variable2\": \"varF\",\"var2_domain\": \"domain4\",\"coef\": \"0.4430148325530492\",\"value\": \"0.4430148325530492\",\"linkColour\": \"#3dcc92\", \"rounded\": \"0.443\"},\n    {\"variable1\": \"varW\",\"var1_domain\": \"domain1\",\"variable2\": \"varR\",\"var2_domain\": \"domain5\",\"coef\": \"0.6158930611854154\",\"value\": \"0.6158930611854154\",\"linkColour\": \"#3dccbe\", \"rounded\": \"0.616\"},\n    {\"variable1\": \"varT\",\"var1_domain\": \"domain7\",\"variable2\": \"varD\",\"var2_domain\": \"domain2\",\"coef\": \"-0.5467308227741515\",\"value\": \"0.5467308227741515\",\"linkColour\": \"#ccb13d\", \"rounded\": \"-0.547\"},\n    {\"variable1\": \"varH\",\"var1_domain\": \"domain7\",\"variable2\": \"varA\",\"var2_domain\": \"domain5\",\"coef\": \"-0.4567911618605825\",\"value\": \"0.4567911618605825\",\"linkColour\": \"#ccc83d\", \"rounded\": \"-0.457\"},\n    {\"variable1\": \"varI\",\"var1_domain\": \"domain8\",\"variable2\": \"varO\",\"var2_domain\": \"domain7\",\"coef\": \"-0.45227245085444834\",\"value\": \"0.45227245085444834\",\"linkColour\": \"#ccc93d\", \"rounded\": \"-0.452\"}    ]};\n  }\n  \n  componentDidUpdate() {\n    // Export\n    let chart = am4core.create(\"chartdiv\", am4charts.ChordDiagram);\n    chart.exporting.menu = new am4core.ExportMenu();\n    chart.exporting.filePrefix = \"exposome-globe\";\n\n    // Colour settings\n    chart.colors.saturation = 0.45;\n\n    chart.data = this.state.data;\n    // Read data from JSON file\n    chart.dataFields.fromName = \"var1_domain\";\n    chart.dataFields.toName = \"var2_domain\";\n    chart.dataFields.value = \"value\";\n\n    // Chart spacing settings\n    chart.nodePadding = 0.5;\n    chart.minNodeSize = 0.01;\n    chart.sortBy = \"value\";\n    chart.fontSize = 15;\n    // ?\n    chart.fontFamily = \"Open Sans\";\n    //hart.textDecoration\n\n\n    var nodeTemplate = chart.nodes.template;\n    nodeTemplate.propertyFields.fill = \"color\";\n\n    // Highlight links when hovering over node\n    nodeTemplate.events.on(\"over\", function(event) {    \n      var node = event.target;\n      node.outgoingDataItems.each(function(dataItem) {\n          if(dataItem.toNode){\n              dataItem.link.isHover = true;\n              dataItem.toNode.label.isHover = true;\n          }\n      })\n      node.incomingDataItems.each(function(dataItem) {\n          if(dataItem.fromNode){\n              dataItem.link.isHover = true;\n              dataItem.fromNode.label.isHover = true;\n          }\n      }) \n      node.label.isHover = true;   \n    })\n\n    // When un-hovering from node, un-hover over links\n    nodeTemplate.events.on(\"out\", function(event) {\n      var node = event.target;\n      node.outgoingDataItems.each(function(dataItem) {        \n          if(dataItem.toNode){\n              dataItem.link.isHover = false;                \n              dataItem.toNode.label.isHover = false;\n          }\n      })\n      node.incomingDataItems.each(function(dataItem) {\n          if(dataItem.fromNode){\n              dataItem.link.isHover = false;\n            dataItem.fromNode.label.isHover = false;\n          }\n      })\n      node.label.isHover = false;\n    })\n\n    // Node label formatting\n    var label = nodeTemplate.label;\n    label.relativeRotation = 90;\n    label.fillOpacity = 0.4;\n    label.marginTop  = 100;\n    let labelHS = label.states.create(\"hover\");\n    labelHS.properties.fillOpacity = 1;\n\n    // Hover formatting\n    nodeTemplate.cursorOverStyle = am4core.MouseCursorStyle.pointer;\n\n    // Link formatting\n    var linkTemplate = chart.links.template;\n    linkTemplate.strokeOpacity = 0;\n    linkTemplate.fillOpacity = 0.15;\n    linkTemplate.tooltipText = \"{variable1} → {variable2}: {label}\";\n    linkTemplate.colorMode = \"solid\";\n    linkTemplate.propertyFields.fill = \"linkColour\";\n    chart.sortBy = \"name\";\n    linkTemplate.clickable = false;\n\n    var hoverState = linkTemplate.states.create(\"hover\");\n    hoverState.properties.fillOpacity = 1.0;\n    hoverState.properties.strokeOpacity = 1.0;\n\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  onFileChange = (event) => {\n      let file = event.target.files[0];\n      let reader = new FileReader();\n      reader.readAsText(file);\n      let that = this;\n      reader.onload = function(event) {\n        let unfilteredData = loadCSV(event.target.result);\n        let data = unfilteredData.filter(\n          function(x) { return Math.abs(parseFloat(x.coef)) >= that.state.threshold; }\n        );\n\n        for(let i=0; i<data.length; i++){\n          data[i].linkColour = getColourDichromatic(parseFloat(data[i].coef));\n          data[i].value = Math.abs(parseFloat(data[i].coef));\n          data[i].label = Math.round(parseFloat(data[i].coef) * 1000)/1000;\n        }        \n        that.setState({data: data});\n      };\n  };\n\n  render() {\n    return (\n      <div>\n        <input type=\"file\" onChange={this.onFileChange} />\n        <div id=\"chartdiv\" style={{ width: \"100%\", height: \"875px\" }}></div>\n      </div>\n    );\n  }\n}\n\nfunction loadCSV(text) {\n  let arr = text.split(\"\\n\");\n  let header = [\"variable1\",\"var1_domain\",\"variable2\",\"var2_domain\",\"coef\", \"value\", \"linkColour\", \"label\\r\"];\n  let data = [];\n  for(let i=1; i<arr.length; i++) {\n    let row = {};\n    let row_data = arr[i].split(\",\");\n    for(let j=0; j<header.length; j++)\n      row[header[j]] = row_data[j];\n    data.push(row);\n  }\n  return data;\n}\n\nfunction getColourDichromatic(correlation){\n  if(correlation > 0)\n        return colorScale(\"#4F75D2\", Math.abs(correlation))\n    if(correlation < 0)\n        return colorScale(\"#DF3C3C\", Math.abs(correlation))\n    return \"#D3D3D3\"\n}\n\nfunction colorScale(hexstr, scalefactor){\n\n    if (scalefactor < 0)\n        return hexstr;\n\n    let r = parseInt(hexstr.slice(1,3), 16);\n    let g = parseInt(hexstr.slice(3,5), 16);\n    let b = parseInt(hexstr.slice(5,7), 16);\n\n    r = parseInt(r + (225 - r) * (1 - scalefactor));\n    g = parseInt(g + (225 - g) * (1 - scalefactor));\n    b = parseInt(b + (225 - b) * (1  - scalefactor));\n\n    return rgbToHex(r,g,b);\n}\n\nfunction rgbToHex(r, g, b) {\n  return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}