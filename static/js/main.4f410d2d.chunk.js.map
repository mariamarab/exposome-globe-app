{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["getColorDichromatic","correlation","positiveColor","negativeColor","colorScale","Math","abs","hexstr","scalefactor","r","parseInt","slice","g","b","rgbToHex","toString","hexToRgb","hex","result","exec","a","am4core","am4themes_animated","App","props","onFileChange","event","file","target","files","reader","FileReader","readAsText","that","onload","data","text","arr","split","header","i","length","row","row_data","j","push","loadCSV","filteredData","filter","x","parseFloat","coef","state","threshold","positiveCorrelationColor","negativeCorrelationColor","linkColor","console","log","value","label","round","setState","handlePositiveColorPickerButtonClick","displayPositiveColorPicker","handleNegativeColorPickerButtonClick","displayNegativeColorPicker","handlePositiveColorPickerClose","handleNegativeColorPickerClose","handlePositiveColorPickerChange","color","rgb","handleNegativeColorPickerChange","handleSubmit","test","est","displayColorPicker","handleThresholdChange","bind","handleThresholdSubmit","chart","am4charts","exporting","menu","filePrefix","colors","saturation","this","dataFields","fromName","toName","nodePadding","minNodeSize","sortBy","fontSize","fontFamily","nodeTemplate","nodes","template","propertyFields","fill","events","on","node","outgoingDataItems","each","dataItem","toNode","link","isHover","incomingDataItems","fromNode","relativeRotation","fillOpacity","marginTop","states","create","properties","cursorOverStyle","pointer","linkTemplate","links","strokeOpacity","tooltipText","colorMode","clickable","hoverState","dispose","preventDefault","positiveStyles","reactCSS","width","height","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","negativeStyles","onSubmit","onChange","type","style","onClick","id","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f410d2d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport { SketchPicker } from 'react-color';\nimport reactCSS from 'reactcss';\n\nam4core.useTheme(am4themes_animated);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      test: false,\n      threshold: 0.6,\n      displayColorPicker: false,\n      displayPositiveColorPicker: false,\n      displayNegativeColorPicker: false,\n      positiveCorrelationColor: hexToRgb('#4F75D2'),\n      negativeCorrelationColor: hexToRgb('#DF3C3C'),\n      data: [{ \"variable1\": \"\", \"var1_domain\": \"\", \"variable2\": \"\", \"var2_domain\": \"\", \"coef\": \"0\", \"value\": \"0\", \"linkColor\": \"#c1cc3d\", \"rounded\": \"0\" }]\n    };\n    this.handleThresholdChange = this.handleThresholdChange.bind(this);\n    this.handleThresholdSubmit = this.handleThresholdSubmit.bind(this);\n  }\n\n  componentDidUpdate() {\n    // Export\n    let chart = am4core.create(\"chartdiv\", am4charts.ChordDiagram);\n    chart.exporting.menu = new am4core.ExportMenu();\n    chart.exporting.filePrefix = \"exposome-globe\";\n\n    // Color settings\n    chart.colors.saturation = 0.45;\n\n    chart.data = this.state.filteredData;\n    // Read data from JSON file\n    chart.dataFields.fromName = \"var1_domain\";\n    chart.dataFields.toName = \"var2_domain\";\n    chart.dataFields.value = \"value\";\n\n    // Chart spacing settings\n    chart.nodePadding = 0.5;\n    chart.minNodeSize = 0.01;\n    chart.sortBy = \"value\";\n    chart.fontSize = 15;\n    // ?\n    chart.fontFamily = \"Open Sans\";\n    //hart.textDecoration\n\n\n    var nodeTemplate = chart.nodes.template;\n    nodeTemplate.propertyFields.fill = \"color\";\n\n    // Highlight links when hovering over node\n    nodeTemplate.events.on(\"over\", function (event) {\n      var node = event.target;\n      node.outgoingDataItems.each(function (dataItem) {\n        if (dataItem.toNode) {\n          dataItem.link.isHover = true;\n          dataItem.toNode.label.isHover = true;\n        }\n      })\n      node.incomingDataItems.each(function (dataItem) {\n        if (dataItem.fromNode) {\n          dataItem.link.isHover = true;\n          dataItem.fromNode.label.isHover = true;\n        }\n      })\n      node.label.isHover = true;\n    })\n\n    // When un-hovering from node, un-hover over links\n    nodeTemplate.events.on(\"out\", function (event) {\n      var node = event.target;\n      node.outgoingDataItems.each(function (dataItem) {\n        if (dataItem.toNode) {\n          dataItem.link.isHover = false;\n          dataItem.toNode.label.isHover = false;\n        }\n      })\n      node.incomingDataItems.each(function (dataItem) {\n        if (dataItem.fromNode) {\n          dataItem.link.isHover = false;\n          dataItem.fromNode.label.isHover = false;\n        }\n      })\n      node.label.isHover = false;\n    })\n\n    // Node label formatting\n    var label = nodeTemplate.label;\n    label.relativeRotation = 90;\n    label.fillOpacity = 0.4;\n    label.marginTop = 100;\n    let labelHS = label.states.create(\"hover\");\n    labelHS.properties.fillOpacity = 1;\n\n    // Hover formatting\n    nodeTemplate.cursorOverStyle = am4core.MouseCursorStyle.pointer;\n\n    // Link formatting\n    var linkTemplate = chart.links.template;\n    linkTemplate.strokeOpacity = 0;\n    linkTemplate.fillOpacity = 0.15;\n    linkTemplate.tooltipText = \"{variable1} → {variable2}: {label}\";\n    linkTemplate.colorMode = \"solid\";\n    linkTemplate.propertyFields.fill = \"linkColor\";\n    chart.sortBy = \"name\";\n    linkTemplate.clickable = false;\n\n    var hoverState = linkTemplate.states.create(\"hover\");\n    hoverState.properties.fillOpacity = 1.0;\n    hoverState.properties.strokeOpacity = 1.0;\n\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  onFileChange = (event) => {\n    let file = event.target.files[0];\n    let reader = new FileReader();\n    reader.readAsText(file);\n    let that = this;\n    reader.onload = function (event) {\n      let data = loadCSV(event.target.result);\n      let filteredData = data.filter(\n        function (x) { return Math.abs(parseFloat(x.coef)) >= that.state.threshold; }\n      );\n      for (let i = 0; i < filteredData.length; i++) {\n        let positiveColor = rgbToHex(that.state.positiveCorrelationColor.r, that.state.positiveCorrelationColor.g, that.state.positiveCorrelationColor.b);\n        let negativeColor = rgbToHex(that.state.negativeCorrelationColor.r, that.state.negativeCorrelationColor.g, that.state.negativeCorrelationColor.b);\n        filteredData[i].linkColor = getColorDichromatic(parseFloat(filteredData[i].coef), positiveColor, negativeColor);\n        console.log(filteredData[i].linkColor)\n        filteredData[i].value = Math.abs(parseFloat(filteredData[i].coef));\n        filteredData[i].label = Math.round(parseFloat(filteredData[i].coef) * 1000) / 1000;\n      }\n      that.setState({ data: data });\n      that.setState({ filteredData: filteredData });\n    };\n  };\n\n  handleThresholdChange(event) {\n    let that = this;\n    let filteredData = this.state.data.filter(\n      function (x) { return Math.abs(parseFloat(x.coef)) >= event.target.value; }\n    );\n    this.setState({ threshold: event.target.value });\n    this.setState({ filteredData: filteredData });\n  }\n\n  handleThresholdSubmit(event) {\n    event.preventDefault();\n  }\n\n  handlePositiveColorPickerButtonClick = () => {\n    this.setState({ displayPositiveColorPicker: !this.state.displayPositiveColorPicker });\n  }\n\n  handleNegativeColorPickerButtonClick = () => {\n    this.setState({ displayNegativeColorPicker: !this.state.displayNegativeColorPicker });\n  }\n\n  handlePositiveColorPickerClose = () => {\n    this.setState({ displayPositiveColorPicker: false });\n  }\n\n  handleNegativeColorPickerClose = () => {\n    this.setState({ displayNegativeColorPicker: false });\n  }\n\n  handlePositiveColorPickerChange = (color) => {\n    this.setState({ positiveCorrelationColor: color.rgb })\n  };\n\n  handleNegativeColorPickerChange = (color) => {\n    this.setState({ negativeCorrelationColor: color.rgb })\n  };\n\n  handleSubmit = () => {\n    let that = this;\n    let filteredData = that.state.filteredData;\n    for (let i = 0; i < filteredData.length; i++) {\n      let positiveColor = rgbToHex(that.state.positiveCorrelationColor.r, that.state.positiveCorrelationColor.g, that.state.positiveCorrelationColor.b);\n      let negativeColor = rgbToHex(that.state.negativeCorrelationColor.r, that.state.negativeCorrelationColor.g, that.state.negativeCorrelationColor.b);\n      filteredData[i].linkColor = getColorDichromatic(parseFloat(filteredData[i].coef), positiveColor, negativeColor);\n    }\n    this.setState({ test: !that.state.est })\n  }\n\n  render() {\n\n    const positiveStyles = reactCSS({\n      'default': {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n          background: `rgba(${this.state.positiveCorrelationColor.r}, ${this.state.positiveCorrelationColor.g}, ${this.state.positiveCorrelationColor.b}, ${this.state.positiveCorrelationColor.a})`,\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    const negativeStyles = reactCSS({\n      'default': {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n          background: `rgba(${this.state.negativeCorrelationColor.r}, ${this.state.negativeCorrelationColor.g}, ${this.state.negativeCorrelationColor.b}, ${this.state.negativeCorrelationColor.a})`,\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    return (\n      <div>\n\n        <form onSubmit={this.handleThresholdSubmit}>\n          <label>\n            Threshold: <textarea value={this.state.threshold} onChange={this.handleThresholdChange} />\n          </label>\n          <br />\n          <input type=\"file\" onChange={this.onFileChange} />\n        </form>\n        <br/>\n        <br/>\n        <div>\n          <div style={positiveStyles.swatch} onClick={this.handlePositiveColorPickerButtonClick}>\n            <div style={positiveStyles.color} />\n          </div>\n          {this.state.displayPositiveColorPicker ? <div style={positiveStyles.popover}>\n            <div style={positiveStyles.cover} onClick={this.handlePositiveColorPickerClose} />\n            <SketchPicker color={this.state.positiveCorrelationColor} onChange={this.handlePositiveColorPickerChange} />\n          </div> : null}\n          <button onClick={this.handleSubmit}>Update colors</button>\n        </div>\n\n        <div>\n          <div style={negativeStyles.swatch} onClick={this.handleNegativeColorPickerButtonClick}>\n            <div style={negativeStyles.color} />\n          </div>\n          {this.state.displayNegativeColorPicker ? <div style={negativeStyles.popover}>\n            <div style={negativeStyles.cover} onClick={this.handleNegativeColorPickerClose} />\n            <SketchPicker color={this.state.negativeCorrelationColor} onChange={this.handleNegativeColorPickerChange} />\n          </div> : null}\n        </div>\n\n        <div id=\"chartdiv\" style={{ width: \"100%\", height: \"875px\" }}></div>\n      </div>\n    );\n  }\n}\n\nfunction loadCSV(text) {\n  let arr = text.split(\"\\n\");\n  let header = [\"variable1\", \"var1_domain\", \"variable2\", \"var2_domain\", \"coef\", \"value\", \"linkColor\", \"label\\r\"];\n  let data = [];\n  for (let i = 1; i < arr.length; i++) {\n    let row = {};\n    let row_data = arr[i].split(\",\");\n    for (let j = 0; j < header.length; j++)\n      row[header[j]] = row_data[j];\n    data.push(row);\n  }\n  return data;\n}\n\nfunction getColorDichromatic(correlation, positiveColor, negativeColor) {\n  if (correlation > 0)\n    return colorScale(positiveColor, Math.abs(correlation))\n  if (correlation < 0)\n    return colorScale(negativeColor, Math.abs(correlation))\n  return \"#D3D3D3\"\n}\nfunction colorScale(hexstr, scalefactor) {\n\n  if (scalefactor < 0)\n    return hexstr;\n\n  let r = parseInt(hexstr.slice(1, 3), 16);\n  let g = parseInt(hexstr.slice(3, 5), 16);\n  let b = parseInt(hexstr.slice(5, 7), 16);\n\n  r = parseInt(r + (225 - r) * (1 - scalefactor));\n  g = parseInt(g + (225 - g) * (1 - scalefactor));\n  b = parseInt(b + (225 - b) * (1 - scalefactor));\n\n  return rgbToHex(r, g, b);\n}\n\nfunction rgbToHex(r, g, b) {\n  return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\n\nfunction hexToRgb(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16),\n    a: 1\n  } : null;\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}